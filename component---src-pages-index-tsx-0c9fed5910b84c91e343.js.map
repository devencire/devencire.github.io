{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/pages/index.tsx","webpack:///./src/components/Layout.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["React","createContext","PropTypes","object","string","isRequired","func","__webpack_exports__","data","_2596117819","react_default","a","createElement","Layout","site","siteMetadata","title","allMarkdownRemark","edges","map","_ref","node","gatsby_link_default","to","fields","slug","frontmatter","date","buildTime","__webpack_require__","d","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","children","style","margin","maxWidth","padding","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname"],"mappings":"+KAa2BA,IAAMC,cAAc,IAuDvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,KClEPC,EAAA,mBACb,IAAMC,EAAuBC,EAAAD,KA0B7B,OACEE,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,UAAKJ,EAAKM,KAAKC,aAAaC,OAC3BR,EAAKS,kBAAkBC,MAAMC,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAChCX,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAMY,GAAIF,EAAKG,OAAOC,MACnBJ,EAAKK,YAAYV,MADpB,KAC6BK,EAAKK,YAAYC,KAD9C,QAKJjB,EAAAC,EAAAC,cAAA,iCAAyBJ,EAAKM,KAAKc,+CC1CzCC,EAAAC,EAAAvB,EAAA,sBAAAM,IAAA,IAAAkB,EAAAF,EAAA,GAAAG,EAAAH,EAAAI,EAAAF,GAEalB,EAAS,SAAAO,GAAA,IAAGc,EAAHd,EAAGc,SAAH,OACpBF,EAAArB,EAAAC,cAAA,OAAKuB,MAAO,CAAEC,OAAM,SAAYC,SAAU,IAAKC,QAAO,WACnDJ,yBCJL,IAAsBK,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,kiBCKzCK,EAAmB,SAAAxB,GAAiC,IAA9ByB,EAA8BzB,EAA9ByB,SAAUC,EAAoB1B,EAApB0B,cACpC,OAAKA,EAGE9C,IAAMY,cAAcmC,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,MASXN,EAAiBO,UAAY,CAC3BN,SAAU3C,IAAUkD,MAAM,CACxBC,SAAUnD,IAAUE,OAAOC,aAC1BA,YAGUuC","file":"component---src-pages-index-tsx-0c9fed5910b84c91e343.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\r\nimport { Layout } from \"../components/Layout\"\r\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\r\nimport { SiteTitleQuery } from \"../graphqlTypes\"\r\n\r\nexport default () => {\r\n  const data: SiteTitleQuery = useStaticQuery(graphql`\r\n    query SiteTitle {\r\n      site {\r\n        buildTime\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n      allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n        totalCount\r\n        edges {\r\n          node {\r\n            id\r\n            frontmatter {\r\n              title\r\n              date(formatString: \"DD MMMM, YYYY\")\r\n            }\r\n            fields {\r\n              slug\r\n            }\r\n            excerpt\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  return (\r\n    <Layout>\r\n      <h2>{data.site.siteMetadata.title}</h2>\r\n      {data.allMarkdownRemark.edges.map(({ node }) => (\r\n        <p>\r\n          <Link to={node.fields.slug}>\r\n            {node.frontmatter.title} ({node.frontmatter.date})\r\n          </Link>\r\n        </p>\r\n      ))}\r\n      <p>This last rebuilt at {data.site.buildTime}</p>\r\n    </Layout>\r\n  )\r\n}\r\n","import React from \"react\"\r\n\r\nexport const Layout = ({ children }) => (\r\n  <div style={{ margin: `0 auto`, maxWidth: 650, padding: `0 1rem` }}>\r\n    {children}\r\n  </div>\r\n)\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}